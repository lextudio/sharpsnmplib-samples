// Generated by #SNMP MIB Compiler Pro 2.1.2.0
// IMPORTANT: This file is overwritten during compilation, so you should not modify it manually.
// Original file name is C:\Users\lextudio\source\repos\test-field\ip-mib\IP-MIB.mib
using System;
using System.Collections.Generic;
using Lextm.SharpSnmpLib;
using Samples.Pipeline;
// using Lextm.SharpSnmpPro.Mib; // TODO: Uncomment if syntax validation is required.

namespace IP_MIB
{

    /// <remarks>
    /// * ID:
    ///   1.3.6.1.2.1.4.1
    /// * Max access:
    ///   read-write
    /// * Status:
    ///   br
    /// * Description:
    ///   "The indication of whether this entity is acting as an IP
    ///         router in respect to the forwarding of datagrams received
    ///         by, but not addressed to, this entity. IP routers forward
    ///         datagrams. IP hosts do not (except those source-routed via
    ///         the host)."
    /// </remarks>
    public sealed partial class ipForwarding : ScalarObject
    {
        public ipForwarding() : base("1.3.6.1.2.1.4.1.0")
        {
            OnCreate();
        }
    }

    /// <remarks>
    /// * ID:
    ///   1.3.6.1.2.1.4.2
    /// * Max access:
    ///   read-write
    /// * Status:
    ///   br
    /// * Description:
    ///   "The default value inserted into the Time-To-Live field of
    ///         the IP header of datagrams originated at this entity,
    ///         whenever a TTL value is not supplied by the transport layer
    ///         protocol."
    /// </remarks>
    public sealed partial class ipDefaultTTL : ScalarObject
    {
        public ipDefaultTTL() : base("1.3.6.1.2.1.4.2.0")
        {
            OnCreate();
        }
    }

    /// <remarks>
    /// * ID:
    ///   1.3.6.1.2.1.4.3
    /// * Max access:
    ///   read-only
    /// * Status:
    ///   br
    /// * Description:
    ///   "The total number of input datagrams received from
    ///         interfaces, including those received in error."
    /// </remarks>
    public sealed partial class ipInReceives : ScalarObject
    {
        public ipInReceives() : base("1.3.6.1.2.1.4.3.0")
        {
            OnCreate();
        }
    }

    /// <remarks>
    /// * ID:
    ///   1.3.6.1.2.1.4.4
    /// * Max access:
    ///   read-only
    /// * Status:
    ///   br
    /// * Description:
    ///   "The number of input datagrams discarded due to errors in
    ///         their IP headers, including bad checksums, version number
    ///         mismatch, other format errors, time-to-live exceeded, errors
    ///         discovered in processing their IP options, etc."
    /// </remarks>
    public sealed partial class ipInHdrErrors : ScalarObject
    {
        public ipInHdrErrors() : base("1.3.6.1.2.1.4.4.0")
        {
            OnCreate();
        }
    }

    /// <remarks>
    /// * ID:
    ///   1.3.6.1.2.1.4.5
    /// * Max access:
    ///   read-only
    /// * Status:
    ///   br
    /// * Description:
    ///   "The number of input datagrams discarded because the IP
    ///         address in their IP header's destination field was not a
    ///         valid address to be received at this entity. This count
    ///         includes invalid addresses (e.g., 0.0.0.0) and addresses of
    ///         unsupported Classes (e.g., Class E). For entities which are
    ///         not IP routers and therefore do not forward datagrams, this
    ///         counter includes datagrams discarded because the destination
    ///         address was not a local address."
    /// </remarks>
    public sealed partial class ipInAddrErrors : ScalarObject
    {
        public ipInAddrErrors() : base("1.3.6.1.2.1.4.5.0")
        {
            OnCreate();
        }
    }

    /// <remarks>
    /// * ID:
    ///   1.3.6.1.2.1.4.6
    /// * Max access:
    ///   read-only
    /// * Status:
    ///   br
    /// * Description:
    ///   "The number of input datagrams for which this entity was not
    ///         their final IP destination, as a result of which an attempt
    ///         was made to find a route to forward them to that final
    ///         destination. In entities which do not act as IP routers,
    ///         this counter will include only those packets which were
    ///         Source-Routed via this entity, and the Source-Route option
    ///         processing was successful."
    /// </remarks>
    public sealed partial class ipForwDatagrams : ScalarObject
    {
        public ipForwDatagrams() : base("1.3.6.1.2.1.4.6.0")
        {
            OnCreate();
        }
    }

    /// <remarks>
    /// * ID:
    ///   1.3.6.1.2.1.4.7
    /// * Max access:
    ///   read-only
    /// * Status:
    ///   br
    /// * Description:
    ///   "The number of locally-addressed datagrams received
    ///         successfully but discarded because of an unknown or
    ///         unsupported protocol."
    /// </remarks>
    public sealed partial class ipInUnknownProtos : ScalarObject
    {
        public ipInUnknownProtos() : base("1.3.6.1.2.1.4.7.0")
        {
            OnCreate();
        }
    }

    /// <remarks>
    /// * ID:
    ///   1.3.6.1.2.1.4.8
    /// * Max access:
    ///   read-only
    /// * Status:
    ///   br
    /// * Description:
    ///   "The number of input IP datagrams for which no problems were
    ///         encountered to prevent their continued processing, but which
    ///         were discarded (e.g., for lack of buffer space). Note that
    ///         this counter does not include any datagrams discarded while
    ///         awaiting re-assembly."
    /// </remarks>
    public sealed partial class ipInDiscards : ScalarObject
    {
        public ipInDiscards() : base("1.3.6.1.2.1.4.8.0")
        {
            OnCreate();
        }
    }

    /// <remarks>
    /// * ID:
    ///   1.3.6.1.2.1.4.9
    /// * Max access:
    ///   read-only
    /// * Status:
    ///   br
    /// * Description:
    ///   "The total number of input datagrams successfully delivered
    ///         to IP user-protocols (including ICMP)."
    /// </remarks>
    public sealed partial class ipInDelivers : ScalarObject
    {
        public ipInDelivers() : base("1.3.6.1.2.1.4.9.0")
        {
            OnCreate();
        }
    }

    /// <remarks>
    /// * ID:
    ///   1.3.6.1.2.1.4.10
    /// * Max access:
    ///   read-only
    /// * Status:
    ///   br
    /// * Description:
    ///   "The total number of IP datagrams which local IP user-
    ///         protocols (including ICMP) supplied to IP in requests for
    ///         transmission. Note that this counter does not include any
    ///         datagrams counted in ipForwDatagrams."
    /// </remarks>
    public sealed partial class ipOutRequests : ScalarObject
    {
        public ipOutRequests() : base("1.3.6.1.2.1.4.10.0")
        {
            OnCreate();
        }
    }

    /// <remarks>
    /// * ID:
    ///   1.3.6.1.2.1.4.11
    /// * Max access:
    ///   read-only
    /// * Status:
    ///   br
    /// * Description:
    ///   "The number of output IP datagrams for which no problem was
    ///         encountered to prevent their transmission to their
    ///         destination, but which were discarded (e.g., for lack of
    ///         buffer space). Note that this counter would include
    ///         datagrams counted in ipForwDatagrams if any such packets met
    ///         this (discretionary) discard criterion."
    /// </remarks>
    public sealed partial class ipOutDiscards : ScalarObject
    {
        public ipOutDiscards() : base("1.3.6.1.2.1.4.11.0")
        {
            OnCreate();
        }
    }

    /// <remarks>
    /// * ID:
    ///   1.3.6.1.2.1.4.12
    /// * Max access:
    ///   read-only
    /// * Status:
    ///   br
    /// * Description:
    ///   "The number of IP datagrams discarded because no route could
    ///         be found to transmit them to their destination. Note that
    ///         this counter includes any packets counted in ipForwDatagrams
    ///         which meet this `no-route' criterion. Note that this
    ///         includes any datagrams which a host cannot route because all
    ///         of its default routers are down."
    /// </remarks>
    public sealed partial class ipOutNoRoutes : ScalarObject
    {
        public ipOutNoRoutes() : base("1.3.6.1.2.1.4.12.0")
        {
            OnCreate();
        }
    }

    /// <remarks>
    /// * ID:
    ///   1.3.6.1.2.1.4.13
    /// * Max access:
    ///   read-only
    /// * Status:
    ///   br
    /// * Description:
    ///   "The maximum number of seconds which received fragments are
    ///         held while they are awaiting reassembly at this entity."
    /// </remarks>
    public sealed partial class ipReasmTimeout : ScalarObject
    {
        public ipReasmTimeout() : base("1.3.6.1.2.1.4.13.0")
        {
            OnCreate();
        }
    }

    /// <remarks>
    /// * ID:
    ///   1.3.6.1.2.1.4.14
    /// * Max access:
    ///   read-only
    /// * Status:
    ///   br
    /// * Description:
    ///   "The number of IP fragments received which needed to be
    ///         reassembled at this entity."
    /// </remarks>
    public sealed partial class ipReasmReqds : ScalarObject
    {
        public ipReasmReqds() : base("1.3.6.1.2.1.4.14.0")
        {
            OnCreate();
        }
    }

    /// <remarks>
    /// * ID:
    ///   1.3.6.1.2.1.4.15
    /// * Max access:
    ///   read-only
    /// * Status:
    ///   br
    /// * Description:
    ///   "The number of IP datagrams successfully re-assembled."
    /// </remarks>
    public sealed partial class ipReasmOKs : ScalarObject
    {
        public ipReasmOKs() : base("1.3.6.1.2.1.4.15.0")
        {
            OnCreate();
        }
    }

    /// <remarks>
    /// * ID:
    ///   1.3.6.1.2.1.4.16
    /// * Max access:
    ///   read-only
    /// * Status:
    ///   br
    /// * Description:
    ///   "The number of failures detected by the IP re-assembly
    ///         algorithm (for whatever reason: timed out, errors, etc).
    ///         Note that this is not necessarily a count of discarded IP
    ///         fragments since some algorithms (notably the algorithm in
    ///         RFC 815) can lose track of the number of fragments by
    ///         combining them as they are received."
    /// </remarks>
    public sealed partial class ipReasmFails : ScalarObject
    {
        public ipReasmFails() : base("1.3.6.1.2.1.4.16.0")
        {
            OnCreate();
        }
    }

    /// <remarks>
    /// * ID:
    ///   1.3.6.1.2.1.4.17
    /// * Max access:
    ///   read-only
    /// * Status:
    ///   br
    /// * Description:
    ///   "The number of IP datagrams that have been successfully
    ///         fragmented at this entity."
    /// </remarks>
    public sealed partial class ipFragOKs : ScalarObject
    {
        public ipFragOKs() : base("1.3.6.1.2.1.4.17.0")
        {
            OnCreate();
        }
    }

    /// <remarks>
    /// * ID:
    ///   1.3.6.1.2.1.4.18
    /// * Max access:
    ///   read-only
    /// * Status:
    ///   br
    /// * Description:
    ///   "The number of IP datagrams that have been discarded because
    ///         they needed to be fragmented at this entity but could not
    ///         be, e.g., because their Don't Fragment flag was set."
    /// </remarks>
    public sealed partial class ipFragFails : ScalarObject
    {
        public ipFragFails() : base("1.3.6.1.2.1.4.18.0")
        {
            OnCreate();
        }
    }

    /// <remarks>
    /// * ID:
    ///   1.3.6.1.2.1.4.19
    /// * Max access:
    ///   read-only
    /// * Status:
    ///   br
    /// * Description:
    ///   "The number of IP datagram fragments that have been
    ///         generated as a result of fragmentation at this entity."
    /// </remarks>
    public sealed partial class ipFragCreates : ScalarObject
    {
        public ipFragCreates() : base("1.3.6.1.2.1.4.19.0")
        {
            OnCreate();
        }
    }

    /// <remarks>
    /// * ID:
    ///   1.3.6.1.2.1.4.20
    /// * Max access:
    ///   not-accessible
    /// * Status:
    ///   br
    /// * Description:
    ///   "The table of addressing information relevant to this
    ///         entity's IP addresses."
    /// * Indexes:
    ///   g.gM
    /// </remarks>
    public sealed partial class ipAddrTable : TableObject
    {
        private readonly IList<ScalarObject> _elements = new List<ScalarObject>();

        protected override IEnumerable<ScalarObject> Objects
        {
            get { return _elements; }
        }

        public ipAddrTable() : base("1.3.6.1.2.1.4.20")
        {
            OnCreate();
        }
    }

    /// <remarks>
    /// * ID:
    ///   1.3.6.1.2.1.4.20.1.1
    /// * Max access:
    ///   read-only
    /// * Status:
    ///   br
    /// * Description:
    ///   "The IP address to which this entry's addressing information
    ///         pertains."
    /// </remarks>
    public sealed partial class ipAdEntAddr : ScalarObject
    {
        public ipAdEntAddr(string index) : base("1.3.6.1.2.1.4.20.1.1.{0}", index)
        {
            OnCreate(index);
        }
    }

    /// <remarks>
    /// * ID:
    ///   1.3.6.1.2.1.4.20.1.2
    /// * Max access:
    ///   read-only
    /// * Status:
    ///   br
    /// * Description:
    ///   "The index value which uniquely identifies the interface to
    ///         which this entry is applicable. The interface identified by
    ///         a particular value of this index is the same interface as
    ///         identified by the same value of RFC 1573's ifIndex."
    /// </remarks>
    public sealed partial class ipAdEntIfIndex : ScalarObject
    {
        public ipAdEntIfIndex(string index) : base("1.3.6.1.2.1.4.20.1.2.{0}", index)
        {
            OnCreate(index);
        }
    }

    /// <remarks>
    /// * ID:
    ///   1.3.6.1.2.1.4.20.1.3
    /// * Max access:
    ///   read-only
    /// * Status:
    ///   br
    /// * Description:
    ///   "The subnet mask associated with the IP address of this
    ///         entry. The value of the mask is an IP address with all the
    ///         network bits set to 1 and all the hosts bits set to 0."
    /// </remarks>
    public sealed partial class ipAdEntNetMask : ScalarObject
    {
        public ipAdEntNetMask(string index) : base("1.3.6.1.2.1.4.20.1.3.{0}", index)
        {
            OnCreate(index);
        }
    }

    /// <remarks>
    /// * ID:
    ///   1.3.6.1.2.1.4.20.1.4
    /// * Max access:
    ///   read-only
    /// * Status:
    ///   br
    /// * Description:
    ///   "The value of the least-significant bit in the IP broadcast
    ///         address used for sending datagrams on the (logical)
    ///         interface associated with the IP address of this entry. For
    ///         example, when the Internet standard all-ones broadcast
    ///         address is used, the value will be 1. This value applies to
    ///         both the subnet and network broadcasts addresses used by the
    ///         entity on this (logical) interface."
    /// </remarks>
    public sealed partial class ipAdEntBcastAddr : ScalarObject
    {
        public ipAdEntBcastAddr(string index) : base("1.3.6.1.2.1.4.20.1.4.{0}", index)
        {
            OnCreate(index);
        }
    }

    /// <remarks>
    /// * ID:
    ///   1.3.6.1.2.1.4.20.1.5
    /// * Max access:
    ///   read-only
    /// * Status:
    ///   br
    /// * Description:
    ///   "The size of the largest IP datagram which this entity can
    ///         re-assemble from incoming IP fragmented datagrams received
    ///         on this interface."
    /// </remarks>
    public sealed partial class ipAdEntReasmMaxSize : ScalarObject
    {
        public ipAdEntReasmMaxSize(string index) : base("1.3.6.1.2.1.4.20.1.5.{0}", index)
        {
            OnCreate(index);
        }
    }

    /// <remarks>
    /// * ID:
    ///   1.3.6.1.2.1.4.22
    /// * Max access:
    ///   not-accessible
    /// * Status:
    ///   br
    /// * Description:
    ///   "The IP Address Translation table used for mapping from IP
    ///         addresses to physical addresses."
    /// * Indexes:
    ///   g.gM
    ///   g.gM
    /// </remarks>
    public sealed partial class ipNetToMediaTable : TableObject
    {
        private readonly IList<ScalarObject> _elements = new List<ScalarObject>();

        protected override IEnumerable<ScalarObject> Objects
        {
            get { return _elements; }
        }

        public ipNetToMediaTable() : base("1.3.6.1.2.1.4.22")
        {
            OnCreate();
        }
    }

    /// <remarks>
        /// * ID:
        ///   1.3.6.1.2.1.4.22.1.1
        /// * Max access:
        ///   read-create
        /// * Status:
        ///   br
        /// * Description:
        ///   "The interface on which this entry's equivalence is
        ///         effective. The interface identified by a particular value
        ///         of this index is the same interface as identified by the
        ///         same value of RFC 1573's ifIndex."
        /// </remarks>
        public sealed partial class ipNetToMediaIfIndex : ScalarObject
        {
            public ipNetToMediaIfIndex(params string[] indexes) : base("1.3.6.1.2.1.4.22.1.1.{0}", string.Join('.', indexes))
            {

            }
        }

    /// <remarks>
    /// * ID:
    ///   1.3.6.1.2.1.4.22.1.2
    /// * Max access:
    ///   read-create
    /// * Status:
    ///   br
    /// * Description:
    ///   "The media-dependent `physical' address."
    /// </remarks>
    public sealed partial class ipNetToMediaPhysAddress : ScalarObject
    {
        public ipNetToMediaPhysAddress(params string[] indexes) : base("1.3.6.1.2.1.4.22.1.2.{0}", string.Join('.', indexes))
        {

        }
    }

    /// <remarks>
    /// * ID:
    ///   1.3.6.1.2.1.4.22.1.3
    /// * Max access:
    ///   read-create
    /// * Status:
    ///   br
    /// * Description:
    ///   "The IpAddress corresponding to the media-dependent
    ///         `physical' address."
    /// </remarks>
    public sealed partial class ipNetToMediaNetAddress : ScalarObject
    {
        public ipNetToMediaNetAddress(params string[] indexes) : base("1.3.6.1.2.1.4.22.1.3.{0}", string.Join('.', indexes))
        {

        }
    }

    /// <remarks>
    /// * ID:
    ///   1.3.6.1.2.1.4.22.1.4
    /// * Max access:
    ///   read-create
    /// * Status:
    ///   br
    /// * Description:
    ///   "The type of mapping.
    ///         Setting this object to the value invalid(2) has the effect
    ///         of invalidating the corresponding entry in the
    ///         ipNetToMediaTable. That is, it effectively disassociates
    ///         the interface identified with said entry from the mapping
    ///         identified with said entry. It is an implementation-
    ///         specific matter as to whether the agent removes an
    ///         invalidated entry from the table. Accordingly, management
    ///         stations must be prepared to receive tabular information
    ///         from agents that corresponds to entries not currently in
    ///         use. Proper interpretation of such entries requires
    ///         examination of the relevant ipNetToMediaType object."
    /// </remarks>
    public sealed partial class ipNetToMediaType : ScalarObject
    {
        public ipNetToMediaType(params string[] indexes) : base("1.3.6.1.2.1.4.22.1.4.{0}", string.Join('.', indexes))
        {

        }
    }

    /// <remarks>
    /// * ID:
    ///   1.3.6.1.2.1.4.23
    /// * Max access:
    ///   read-only
    /// * Status:
    ///   br
    /// * Description:
    ///   "The number of routing entries which were chosen to be
    ///         discarded even though they are valid. One possible reason
    ///         for discarding such an entry could be to free-up buffer
    ///         space for other routing entries."
    /// </remarks>
    public sealed partial class ipRoutingDiscards : ScalarObject
    {
        public ipRoutingDiscards() : base("1.3.6.1.2.1.4.23.0")
        {
            OnCreate();
        }
    }

    /// <remarks>
    /// * ID:
    ///   1.3.6.1.2.1.5.1
    /// * Max access:
    ///   read-only
    /// * Status:
    ///   br
    /// * Description:
    ///   "The total number of ICMP messages which the entity
    ///         received. Note that this counter includes all those counted
    ///         by icmpInErrors."
    /// </remarks>
    public sealed partial class icmpInMsgs : ScalarObject
    {
        public icmpInMsgs() : base("1.3.6.1.2.1.5.1.0")
        {
            OnCreate();
        }
    }

    /// <remarks>
    /// * ID:
    ///   1.3.6.1.2.1.5.2
    /// * Max access:
    ///   read-only
    /// * Status:
    ///   br
    /// * Description:
    ///   "The number of ICMP messages which the entity received but
    ///         determined as having ICMP-specific errors (bad ICMP
    ///         checksums, bad length, etc.)."
    /// </remarks>
    public sealed partial class icmpInErrors : ScalarObject
    {
        public icmpInErrors() : base("1.3.6.1.2.1.5.2.0")
        {
            OnCreate();
        }
    }

    /// <remarks>
    /// * ID:
    ///   1.3.6.1.2.1.5.3
    /// * Max access:
    ///   read-only
    /// * Status:
    ///   br
    /// * Description:
    ///   "The number of ICMP Destination Unreachable messages
    ///         received."
    /// </remarks>
    public sealed partial class icmpInDestUnreachs : ScalarObject
    {
        public icmpInDestUnreachs() : base("1.3.6.1.2.1.5.3.0")
        {
            OnCreate();
        }
    }

    /// <remarks>
    /// * ID:
    ///   1.3.6.1.2.1.5.4
    /// * Max access:
    ///   read-only
    /// * Status:
    ///   br
    /// * Description:
    ///   "The number of ICMP Time Exceeded messages received."
    /// </remarks>
    public sealed partial class icmpInTimeExcds : ScalarObject
    {
        public icmpInTimeExcds() : base("1.3.6.1.2.1.5.4.0")
        {
            OnCreate();
        }
    }

    /// <remarks>
    /// * ID:
    ///   1.3.6.1.2.1.5.5
    /// * Max access:
    ///   read-only
    /// * Status:
    ///   br
    /// * Description:
    ///   "The number of ICMP Parameter Problem messages received."
    /// </remarks>
    public sealed partial class icmpInParmProbs : ScalarObject
    {
        public icmpInParmProbs() : base("1.3.6.1.2.1.5.5.0")
        {
            OnCreate();
        }
    }

    /// <remarks>
    /// * ID:
    ///   1.3.6.1.2.1.5.6
    /// * Max access:
    ///   read-only
    /// * Status:
    ///   br
    /// * Description:
    ///   "The number of ICMP Source Quench messages received."
    /// </remarks>
    public sealed partial class icmpInSrcQuenchs : ScalarObject
    {
        public icmpInSrcQuenchs() : base("1.3.6.1.2.1.5.6.0")
        {
            OnCreate();
        }
    }

    /// <remarks>
    /// * ID:
    ///   1.3.6.1.2.1.5.7
    /// * Max access:
    ///   read-only
    /// * Status:
    ///   br
    /// * Description:
    ///   "The number of ICMP Redirect messages received."
    /// </remarks>
    public sealed partial class icmpInRedirects : ScalarObject
    {
        public icmpInRedirects() : base("1.3.6.1.2.1.5.7.0")
        {
            OnCreate();
        }
    }

    /// <remarks>
    /// * ID:
    ///   1.3.6.1.2.1.5.8
    /// * Max access:
    ///   read-only
    /// * Status:
    ///   br
    /// * Description:
    ///   "The number of ICMP Echo (request) messages received."
    /// </remarks>
    public sealed partial class icmpInEchos : ScalarObject
    {
        public icmpInEchos() : base("1.3.6.1.2.1.5.8.0")
        {
            OnCreate();
        }
    }

    /// <remarks>
    /// * ID:
    ///   1.3.6.1.2.1.5.9
    /// * Max access:
    ///   read-only
    /// * Status:
    ///   br
    /// * Description:
    ///   "The number of ICMP Echo Reply messages received."
    /// </remarks>
    public sealed partial class icmpInEchoReps : ScalarObject
    {
        public icmpInEchoReps() : base("1.3.6.1.2.1.5.9.0")
        {
            OnCreate();
        }
    }

    /// <remarks>
    /// * ID:
    ///   1.3.6.1.2.1.5.10
    /// * Max access:
    ///   read-only
    /// * Status:
    ///   br
    /// * Description:
    ///   "The number of ICMP Timestamp (request) messages received."
    /// </remarks>
    public sealed partial class icmpInTimestamps : ScalarObject
    {
        public icmpInTimestamps() : base("1.3.6.1.2.1.5.10.0")
        {
            OnCreate();
        }
    }

    /// <remarks>
    /// * ID:
    ///   1.3.6.1.2.1.5.11
    /// * Max access:
    ///   read-only
    /// * Status:
    ///   br
    /// * Description:
    ///   "The number of ICMP Timestamp Reply messages received."
    /// </remarks>
    public sealed partial class icmpInTimestampReps : ScalarObject
    {
        public icmpInTimestampReps() : base("1.3.6.1.2.1.5.11.0")
        {
            OnCreate();
        }
    }

    /// <remarks>
    /// * ID:
    ///   1.3.6.1.2.1.5.12
    /// * Max access:
    ///   read-only
    /// * Status:
    ///   br
    /// * Description:
    ///   "The number of ICMP Address Mask Request messages received."
    /// </remarks>
    public sealed partial class icmpInAddrMasks : ScalarObject
    {
        public icmpInAddrMasks() : base("1.3.6.1.2.1.5.12.0")
        {
            OnCreate();
        }
    }

    /// <remarks>
    /// * ID:
    ///   1.3.6.1.2.1.5.13
    /// * Max access:
    ///   read-only
    /// * Status:
    ///   br
    /// * Description:
    ///   "The number of ICMP Address Mask Reply messages received."
    /// </remarks>
    public sealed partial class icmpInAddrMaskReps : ScalarObject
    {
        public icmpInAddrMaskReps() : base("1.3.6.1.2.1.5.13.0")
        {
            OnCreate();
        }
    }

    /// <remarks>
    /// * ID:
    ///   1.3.6.1.2.1.5.14
    /// * Max access:
    ///   read-only
    /// * Status:
    ///   br
    /// * Description:
    ///   "The total number of ICMP messages which this entity
    ///         attempted to send. Note that this counter includes all
    ///         those counted by icmpOutErrors."
    /// </remarks>
    public sealed partial class icmpOutMsgs : ScalarObject
    {
        public icmpOutMsgs() : base("1.3.6.1.2.1.5.14.0")
        {
            OnCreate();
        }
    }

    /// <remarks>
    /// * ID:
    ///   1.3.6.1.2.1.5.15
    /// * Max access:
    ///   read-only
    /// * Status:
    ///   br
    /// * Description:
    ///   "The number of ICMP messages which this entity did not send
    ///         due to problems discovered within ICMP such as a lack of
    ///         buffers. This value should not include errors discovered
    ///         outside the ICMP layer such as the inability of IP to route
    ///         the resultant datagram. In some implementations there may
    ///         be no types of error which contribute to this counter's
    ///         value."
    /// </remarks>
    public sealed partial class icmpOutErrors : ScalarObject
    {
        public icmpOutErrors() : base("1.3.6.1.2.1.5.15.0")
        {
            OnCreate();
        }
    }

    /// <remarks>
    /// * ID:
    ///   1.3.6.1.2.1.5.16
    /// * Max access:
    ///   read-only
    /// * Status:
    ///   br
    /// * Description:
    ///   "The number of ICMP Destination Unreachable messages sent."
    /// </remarks>
    public sealed partial class icmpOutDestUnreachs : ScalarObject
    {
        public icmpOutDestUnreachs() : base("1.3.6.1.2.1.5.16.0")
        {
            OnCreate();
        }
    }

    /// <remarks>
    /// * ID:
    ///   1.3.6.1.2.1.5.17
    /// * Max access:
    ///   read-only
    /// * Status:
    ///   br
    /// * Description:
    ///   "The number of ICMP Time Exceeded messages sent."
    /// </remarks>
    public sealed partial class icmpOutTimeExcds : ScalarObject
    {
        public icmpOutTimeExcds() : base("1.3.6.1.2.1.5.17.0")
        {
            OnCreate();
        }
    }

    /// <remarks>
    /// * ID:
    ///   1.3.6.1.2.1.5.18
    /// * Max access:
    ///   read-only
    /// * Status:
    ///   br
    /// * Description:
    ///   "The number of ICMP Parameter Problem messages sent."
    /// </remarks>
    public sealed partial class icmpOutParmProbs : ScalarObject
    {
        public icmpOutParmProbs() : base("1.3.6.1.2.1.5.18.0")
        {
            OnCreate();
        }
    }

    /// <remarks>
    /// * ID:
    ///   1.3.6.1.2.1.5.19
    /// * Max access:
    ///   read-only
    /// * Status:
    ///   br
    /// * Description:
    ///   "The number of ICMP Source Quench messages sent."
    /// </remarks>
    public sealed partial class icmpOutSrcQuenchs : ScalarObject
    {
        public icmpOutSrcQuenchs() : base("1.3.6.1.2.1.5.19.0")
        {
            OnCreate();
        }
    }

    /// <remarks>
    /// * ID:
    ///   1.3.6.1.2.1.5.20
    /// * Max access:
    ///   read-only
    /// * Status:
    ///   br
    /// * Description:
    ///   "The number of ICMP Redirect messages sent. For a host,
    ///         this object will always be zero, since hosts do not send
    ///         redirects."
    /// </remarks>
    public sealed partial class icmpOutRedirects : ScalarObject
    {
        public icmpOutRedirects() : base("1.3.6.1.2.1.5.20.0")
        {
            OnCreate();
        }
    }

    /// <remarks>
    /// * ID:
    ///   1.3.6.1.2.1.5.21
    /// * Max access:
    ///   read-only
    /// * Status:
    ///   br
    /// * Description:
    ///   "The number of ICMP Echo (request) messages sent."
    /// </remarks>
    public sealed partial class icmpOutEchos : ScalarObject
    {
        public icmpOutEchos() : base("1.3.6.1.2.1.5.21.0")
        {
            OnCreate();
        }
    }

    /// <remarks>
    /// * ID:
    ///   1.3.6.1.2.1.5.22
    /// * Max access:
    ///   read-only
    /// * Status:
    ///   br
    /// * Description:
    ///   "The number of ICMP Echo Reply messages sent."
    /// </remarks>
    public sealed partial class icmpOutEchoReps : ScalarObject
    {
        public icmpOutEchoReps() : base("1.3.6.1.2.1.5.22.0")
        {
            OnCreate();
        }
    }

    /// <remarks>
    /// * ID:
    ///   1.3.6.1.2.1.5.23
    /// * Max access:
    ///   read-only
    /// * Status:
    ///   br
    /// * Description:
    ///   "The number of ICMP Timestamp (request) messages sent."
    /// </remarks>
    public sealed partial class icmpOutTimestamps : ScalarObject
    {
        public icmpOutTimestamps() : base("1.3.6.1.2.1.5.23.0")
        {
            OnCreate();
        }
    }

    /// <remarks>
    /// * ID:
    ///   1.3.6.1.2.1.5.24
    /// * Max access:
    ///   read-only
    /// * Status:
    ///   br
    /// * Description:
    ///   "The number of ICMP Timestamp Reply messages sent."
    /// </remarks>
    public sealed partial class icmpOutTimestampReps : ScalarObject
    {
        public icmpOutTimestampReps() : base("1.3.6.1.2.1.5.24.0")
        {
            OnCreate();
        }
    }

    /// <remarks>
    /// * ID:
    ///   1.3.6.1.2.1.5.25
    /// * Max access:
    ///   read-only
    /// * Status:
    ///   br
    /// * Description:
    ///   "The number of ICMP Address Mask Request messages sent."
    /// </remarks>
    public sealed partial class icmpOutAddrMasks : ScalarObject
    {
        public icmpOutAddrMasks() : base("1.3.6.1.2.1.5.25.0")
        {
            OnCreate();
        }
    }

    /// <remarks>
    /// * ID:
    ///   1.3.6.1.2.1.5.26
    /// * Max access:
    ///   read-only
    /// * Status:
    ///   br
    /// * Description:
    ///   "The number of ICMP Address Mask Reply messages sent."
    /// </remarks>
    public sealed partial class icmpOutAddrMaskReps : ScalarObject
    {
        public icmpOutAddrMaskReps() : base("1.3.6.1.2.1.5.26.0")
        {
            OnCreate();
        }
    }
}
